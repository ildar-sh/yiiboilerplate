<?php

/**
 * This is the model base class for the table "feed_external".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "FeedExternal".
 *
 * Columns in table "feed_external" available as properties of the model,
 * followed by relations of table "feed_external" available as properties of the model.
 *
 * @property integer $id
 * @property string $parser_type
 * @property string $name
 * @property string $url
 * @property string $last_parsing
 * @property string $created_at
 * @property string $updated_at
 * @property boolean $is_active
 *
 * @property UserFeedExternal[] $userFeedExternals
 * @property FeedExternalItem[] $feedExternalItems
 */
abstract class BaseFeedExternal extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'feed_external';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'FeedExternal|FeedExternals', $n);
	}

	public static function representingColumn() {
		return 'created_at';
	}

	public function rules() {
		return array(
			array('created_at', 'required'),
			array('parser_type', 'length', 'max'=>164),
			array('name', 'length', 'max'=>256),
			array('url', 'length', 'max'=>1024),
			array('last_parsing, updated_at, is_active', 'safe'),
			array('parser_type, name, url, last_parsing, updated_at, is_active', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, parser_type, name, url, last_parsing, created_at, updated_at, is_active', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'userFeedExternals' => array(self::HAS_MANY, 'UserFeedExternal', 'feed_external_id'),
			'feedExternalItems' => array(self::HAS_MANY, 'FeedExternalItem', 'feed_external_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'parser_type' => Yii::t('app', 'Parser Type'),
			'name' => Yii::t('app', 'Name'),
			'url' => Yii::t('app', 'Url'),
			'last_parsing' => Yii::t('app', 'Last Parsing'),
			'created_at' => Yii::t('app', 'Created At'),
			'updated_at' => Yii::t('app', 'Updated At'),
			'is_active' => Yii::t('app', 'Is Active'),
			'userFeedExternals' => null,
			'feedExternalItems' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('parser_type', $this->parser_type, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('url', $this->url, true);
		$criteria->compare('last_parsing', $this->last_parsing, true);
		$criteria->compare('created_at', $this->created_at, true);
		$criteria->compare('updated_at', $this->updated_at, true);
		$criteria->compare('is_active', $this->is_active);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}